{"version":3,"sources":["redux/dialogs-reducer.ts","components/Users/Users.module.css","components/Navbar/Navbar.module.css","api/api.ts","components/Navbar/Navbar.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/News/News.tsx","helpers/object-helpers.ts","redux/users-reducer.ts","components/common/Paginator.tsx","assets/images/userPhoto.png","components/Users/User.tsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","components/Login/LoginForm.tsx","components/Login/Login.tsx","redux/app-reducer.ts","redux/redux-store.ts","hoc/withSuspense.tsx","App.tsx","index.tsx","components/common/FormsControls.module.css","assets/images/loadingAnimation.svg","components/common/Preloader.tsx","components/common/FormsControls.tsx","helpers/validators/validators.ts","components/common/Paginator.module.css","components/Header/Header.module.css","hoc/withAuthRedirect.tsx","redux/profile-reducer.ts"],"names":["initialState","dialogsData","id","name","picture","messagesData","message","dialogsReducer","state","action","type","newMessage","newMessageBody","addMessage","module","exports","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","followUser","userId","post","unFollowUser","delete","authAPI","getAuth","login","model","logout","profileAPI","getProfile","getStatus","updateStatus","status","put","Navbar","className","s","nav","item","to","activeClassName","active","Music","Settings","News","updateObjectInArray","items","itemId","objPropName","newObjProps","map","users","totalUsersCount","isFetching","followingInProgressUsers","followSuccess","unFollowSuccess","toggleIsFetching","toggleIsFollowingInProgress","isFollowingInProgress","followUnFollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","container","disabled","onClick","filter","page","index","selectedPage","User","props","user","follow","unFollow","src","photos","small","userPhoto","alt","some","u","followed","Users","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgressUsers","UsersContainer","pageNumber","requestUsers","this","Preloader","React","Component","compose","connect","totalCount","withAuthRedirect","Header","style","header","loginBlock","isAuth","email","setAuthUserData","HeaderContainer","auth","maxLength","maxLengthCreator","LoginReduxForm","reduxForm","form","handleSubmit","summaryError","error","formClassName","formSummary","formSummaryError","onSubmit","createField","Input","requiredField","undefined","height","color","Login","password","rememberMe","messages","length","stopSubmit","_error","formData","isInitialized","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","app","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","fallback","__store__","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","SocialNetworkApp","StrictMode","ReactDOM","document","getElementById","loadingAnimation","FormControl","meta","touched","children","hasError","textAreaClassName","formControl","errorText","Textarea","input","restProps","component","placeholder","validators","text","validate","value","trim","mapStateToPropsForRedirect","postsData","likeCount","profile","lookingForAJob","lookingForAJobDescription","fullName","contacts","github","vk","facebook","instagram","twitter","website","youtube","mainLink","large","newPost","newPostBody","addPost","setUserStatus","getUserProfile","getUserStatus","updateUserStatus"],"mappings":"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","file":"static/js/main.41f0a88f.chunk.js","sourcesContent":["export type DialogsDataType = {\r\n  id: number\r\n  name: string\r\n  picture: string\r\n};\r\ntype MessagesDataType = {\r\n  id: number\r\n  message: string\r\n};\r\nexport type DialogsType = {\r\n  dialogsData: Array<DialogsDataType>\r\n  messagesData: Array<MessagesDataType>\r\n};\r\n\r\nexport type DialogsActionsType = AddMessageActionType\r\n\r\ntype AddMessageActionType = {\r\n  type: 'ADD-MESSAGE'\r\n  newMessageBody: string\r\n}\r\n\r\nconst initialState: DialogsType = {\r\n  dialogsData: [\r\n    {\r\n      id: 1,\r\n      name: 'Lewis',\r\n      picture: 'https://imgresizer.eurosport.com/unsafe/1200x0/filters:format(jpeg):focal(1390x798:1392x796)/origin-imgresizer.eurosport.com/2020/06/01/2826749-58300008-2560-1440.jpg'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Valtteri',\r\n      picture: 'https://sun9-21.userapi.com/Wj79trhX7JToTycCwPG_CYZSQd1JwAzrdl5G1Q/GIcWEc2zRNg.jpg'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Max',\r\n      picture: 'https://s-cdn.sportbox.ru/images/styles/upload/fp_fotos/a3/7f/6adfbd96bf588fe6288aca94715e78f65da1d4d07ec09338177982.jpg'\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Sergio',\r\n      picture: 'https://www.mexicanist.com/_files/200005550-0f0b40f0b7/450/Sergio%20Perez.jpg'\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'Daniel',\r\n      picture: 'https://media-cdn.mclaren.com/media/images/articles/hero/DR_x_3_web.jpg'\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'Carlos',\r\n      picture: 'https://images2.gazzettaobjects.it/methode_image/2021/03/22/Motori/Foto_Motori_-_Trattate/e3fe2efa4317707d10bb7bfa84eb3c6d_1200x675.jpg?v=202103221647'\r\n    }\r\n  ],\r\n  messagesData: [\r\n    { id: 1, message: 'Hi losers' },\r\n    { id: 2, message: 'Your majesty' },\r\n    { id: 3, message: 'Track limits?' },\r\n    { id: 4, message: 'Stop!' },\r\n    { id: 5, message: 'Hahahaha' },\r\n    { id: 6, message: 'Ferrari' }\r\n  ]\r\n};\r\n\r\nexport const dialogsReducer = (state: DialogsType = initialState, action: DialogsActionsType): DialogsType => {\r\n  switch (action.type) {\r\n    case 'ADD-MESSAGE':\r\n      const newMessage = {\r\n        id: 7,\r\n        message: action.newMessageBody\r\n      };\r\n      return {\r\n        ...state,\r\n        messagesData: [...state.messagesData, newMessage]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const addMessage = (newMessageBody: string): AddMessageActionType => {\r\n  return { type: 'ADD-MESSAGE', newMessageBody } as const;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__1bnnk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__n2StH\",\"item\":\"Navbar_item__1ZDjl\",\"active\":\"Navbar_active__oF4pq\"};","import axios from 'axios';\r\nimport { FormDataType } from '../components/Login/LoginForm';\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  headers: {\r\n    'API-KEY': '363ff7c9-3edc-4bf1-8425-4941aa210b01'\r\n  }\r\n});\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage: number, pageSize: number) {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then(response => response.data);\r\n  },\r\n  followUser(userId: number) {\r\n    return instance.post(`follow/${userId}`)\r\n      .then(response => response.data);\r\n  },\r\n  unFollowUser(userId: number) {\r\n    return instance.delete(`follow/${userId}`)\r\n      .then(response => response.data);\r\n  }\r\n};\r\n\r\nexport const authAPI = {\r\n  getAuth() {\r\n    return instance.get(`auth/me`)\r\n      .then(response => response.data);\r\n  },\r\n  login(model: FormDataType) {\r\n    return instance.post('auth/login', model)\r\n      .then(response => response.data);\r\n  },\r\n  logout() {\r\n    return instance.delete('auth/login')\r\n      .then(response => response.data);\r\n  }\r\n};\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId: string) {\r\n    return instance.get(`profile/${userId}`);\r\n  },\r\n  getStatus(userId: string) {\r\n    return instance.get(`profile/status/${userId}`);\r\n  },\r\n  updateStatus(status: string) {\r\n    return instance.put(`profile/status`, { status: status });\r\n  }\r\n};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from './Navbar.module.css'\r\n\r\nexport function Navbar() {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport function Music() {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport function Settings() {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport function News() {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}","import { PhotosType, UserType } from '../redux/users-reducer';\r\n\r\ntype ItemIdType = string | number | boolean | PhotosType;\r\ntype ObjPropNameType = 'name' | 'id' | 'uniqueUrlName' | 'photos' | 'status' | 'followed';\r\ntype NewObjPropsType = {\r\n  name?: string\r\n  id?: number\r\n  uniqueUrlName?: string\r\n  photos?: PhotosType\r\n  status?: string\r\n  followed?: boolean\r\n}\r\n\r\nexport const updateObjectInArray = (items: UserType[], itemId: ItemIdType, objPropName: ObjPropNameType, newObjProps: NewObjPropsType) => {\r\n  return items.map(item => {\r\n    return item[objPropName] === itemId ? { ...item, ...newObjProps } : item;\r\n  });\r\n};","import { usersAPI } from '../api/api';\r\nimport { Dispatch } from 'react';\r\nimport { updateObjectInArray } from '../helpers/object-helpers';\r\n\r\nexport type PhotosType = {\r\n  small: string\r\n  large: string\r\n}\r\n\r\nexport type UserType = {\r\n  name: string\r\n  id: number\r\n  uniqueUrlName: string\r\n  photos: PhotosType\r\n  status: string\r\n  followed: boolean\r\n}\r\n\r\ntype UsersType = {\r\n  users: UserType[]\r\n  pageSize: number\r\n  totalUsersCount: number\r\n  currentPage: number\r\n  isFetching: boolean\r\n  followingInProgressUsers: number[]\r\n}\r\n\r\nexport type UsersActionsType =\r\n  FollowSuccessActionType\r\n  | UnFollowSuccessActionType\r\n  | SetUsersActionType\r\n  | SetCurrentPageActionType\r\n  | SetTotalUsersCountActionType\r\n  | ToggleIsFetchingActionType\r\n  | ToggleIsFollowingInProgressActionType\r\n\r\ntype FollowSuccessActionType = {\r\n  type: 'FOLLOW'\r\n  userId: number\r\n}\r\ntype UnFollowSuccessActionType = {\r\n  type: 'UN-FOLLOW'\r\n  userId: number\r\n}\r\ntype SetUsersActionType = {\r\n  type: 'SET-USERS'\r\n  users: UserType[]\r\n}\r\ntype SetCurrentPageActionType = {\r\n  type: 'SET-CURRENT-PAGE'\r\n  pageNumber: number\r\n}\r\ntype SetTotalUsersCountActionType = {\r\n  type: 'SET-TOTAL-USERS-COUNT'\r\n  totalUsersCount: number\r\n}\r\ntype ToggleIsFetchingActionType = {\r\n  type: 'TOGGLE-IS-FETCHING'\r\n  isFetching: boolean\r\n}\r\ntype ToggleIsFollowingInProgressActionType = {\r\n  type: 'TOGGLE-IS-FOLLOWING-IN-PROGRESS'\r\n  isFollowingInProgress: boolean\r\n  userId: number\r\n}\r\n\r\nconst initialState: UsersType = {\r\n  users: [],\r\n  pageSize: 50,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgressUsers: []\r\n};\r\n\r\nexport const usersReducer = (state: UsersType = initialState, action: UsersActionsType) => {\r\n  switch (action.type) {\r\n    case 'FOLLOW':\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, 'id', { followed: true })\r\n      };\r\n    case 'UN-FOLLOW':\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, 'id', { followed: false })\r\n      };\r\n    case 'SET-USERS':\r\n      return { ...state, users: [...action.users] };\r\n    case 'SET-CURRENT-PAGE':\r\n      return { ...state, currentPage: action.pageNumber };\r\n    case 'SET-TOTAL-USERS-COUNT':\r\n      return { ...state, totalUsersCount: action.totalUsersCount };\r\n    case 'TOGGLE-IS-FETCHING':\r\n      return { ...state, isFetching: action.isFetching };\r\n    case 'TOGGLE-IS-FOLLOWING-IN-PROGRESS':\r\n      return {\r\n        ...state, followingInProgressUsers: action.isFollowingInProgress\r\n          ? [...state.followingInProgressUsers, action.userId]\r\n          : state.followingInProgressUsers.filter(user => user !== action.userId)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const followSuccess = (userId: number): FollowSuccessActionType => {\r\n  return { type: 'FOLLOW', userId } as const;\r\n};\r\nexport const unFollowSuccess = (userId: number): UnFollowSuccessActionType => {\r\n  return { type: 'UN-FOLLOW', userId } as const;\r\n};\r\nexport const setUsers = (users: UserType[]): SetUsersActionType => {\r\n  return { type: 'SET-USERS', users } as const;\r\n};\r\nexport const setCurrentPage = (pageNumber: number): SetCurrentPageActionType => {\r\n  return { type: 'SET-CURRENT-PAGE', pageNumber } as const;\r\n};\r\nexport const setTotalUsersCount = (totalUsersCount: number): SetTotalUsersCountActionType => {\r\n  return { type: 'SET-TOTAL-USERS-COUNT', totalUsersCount } as const;\r\n};\r\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetchingActionType => {\r\n  return { type: 'TOGGLE-IS-FETCHING', isFetching } as const;\r\n};\r\nexport const toggleIsFollowingInProgress = (isFollowingInProgress: boolean, userId: number): ToggleIsFollowingInProgressActionType => {\r\n  return { type: 'TOGGLE-IS-FOLLOWING-IN-PROGRESS', isFollowingInProgress, userId } as const;\r\n};\r\n\r\nexport const requestUsers = (currentPage: number, pageSize: number) => async (dispatch: Dispatch<UsersActionsType>) => {\r\n  dispatch(setCurrentPage(currentPage));\r\n  dispatch(toggleIsFetching(true));\r\n  const data = await usersAPI.getUsers(currentPage, pageSize);\r\n  dispatch(toggleIsFetching(false));\r\n  dispatch(setUsers(data.items));\r\n  dispatch(setTotalUsersCount(data.totalCount));\r\n};\r\n\r\nconst followUnFollowFlow = async (dispatch: Dispatch<UsersActionsType>, userId: number, apiMethod: (userId: number) => Promise<{ resultCode: number }>, actionCreator: (userId: number) => { type: 'FOLLOW' | 'UN-FOLLOW', userId: number }) => {\r\n  dispatch(toggleIsFollowingInProgress(true, userId));\r\n  const data = await apiMethod(userId);\r\n  if (!data.resultCode) {\r\n    dispatch(actionCreator(userId));\r\n  }\r\n  dispatch(toggleIsFollowingInProgress(false, userId));\r\n};\r\n\r\nexport const follow = (userId: number) => async (dispatch: Dispatch<UsersActionsType>) => {\r\n  await followUnFollowFlow(dispatch, userId, usersAPI.followUser, followSuccess);\r\n};\r\n\r\nexport const unFollow = (userId: number) => async (dispatch: Dispatch<UsersActionsType>) => {\r\n  await followUnFollowFlow(dispatch, userId, usersAPI.unFollowUser, unFollowSuccess);\r\n};\r\n","import React, { useState } from 'react';\r\nimport styles from './Paginator.module.css';\r\n\r\ntype PaginatorPropsType = {\r\n  totalItemsCount: number\r\n  pageSize: number\r\n  onPageChanged: (pageNumber: number) => void\r\n  currentPage: number\r\n  portionSize?: number\r\n}\r\nexport const Paginator: React.FC<PaginatorPropsType> = ({ totalItemsCount, pageSize, onPageChanged, currentPage, portionSize = 10 }) => {\r\n  const pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n  const pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  const portionCount = Math.ceil(pagesCount / portionSize);\r\n  const [portionNumber, setPortionNumber] = useState<number>(1);\r\n  const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  const rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <button\r\n        disabled={portionNumber < 2}\r\n        onClick={() => {\r\n          setPortionNumber(portionNumber - 1);\r\n        }}\r\n      >Prev\r\n      </button>\r\n      {pages\r\n        .filter(page => page >= leftPortionPageNumber && page <= rightPortionPageNumber)\r\n        .map((page, index) => <span key={index}\r\n                                    onClick={() => onPageChanged(page)}\r\n                                    className={ `${styles.page} ${currentPage === page ? styles.selectedPage : ''}`}>\r\n          {`${page}`}</span>)}\r\n      <button\r\n        disabled={portionNumber >= portionCount}\r\n        onClick={() => {\r\n          setPortionNumber(portionNumber + 1);\r\n        }}\r\n      >Next\r\n      </button>\r\n    </div>\r\n  );\r\n};","export default __webpack_public_path__ + \"static/media/userPhoto.a6143582.png\";","import { UserType } from '../../redux/users-reducer';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport userPhoto from '../../assets/images/userPhoto.png';\r\n\r\ntype UserPropsType = {\r\n  user: UserType\r\n  followingInProgressUsers: number[]\r\n  unFollow: (userId: number) => void\r\n  follow: (userId: number) => void\r\n}\r\nexport const User: React.FC<UserPropsType> = (props) => {\r\n  const { user, followingInProgressUsers, follow, unFollow } = props;\r\n  return (\r\n    <div key={user.id}>\r\n      <span>\r\n        <div>\r\n          <NavLink to={`/profile/${user.id}`}>\r\n            <img src={user.photos.small ? user.photos.small : userPhoto} alt=\"\"/>\r\n          </NavLink>\r\n        </div>\r\n        <div>\r\n          <button disabled={followingInProgressUsers.some(u => u === user.id)}\r\n                  onClick={() => {\r\n                    if (user.followed) {\r\n                      unFollow(user.id);\r\n                    } else {\r\n                      follow(user.id);\r\n                    }\r\n                  }}>\r\n            {user.followed ? 'UnFollow' : 'Follow'}\r\n          </button>\r\n        </div>\r\n      </span>\r\n      <span>\r\n        <span>\r\n          <div>{user.name}</div>\r\n          <div>{user.status}</div>\r\n        </span>\r\n        <span>\r\n          <div>{'user.location.country'}</div>\r\n          <div>{'user.location.city'}</div>\r\n        </span>\r\n      </span>\r\n    </div>\r\n  );\r\n};","import { UserType } from '../../redux/users-reducer';\r\nimport styles from './Users.module.css';\r\nimport React from 'react';\r\nimport { Paginator } from '../common/Paginator';\r\nimport { User } from './User';\r\n\r\ntype UsersPropsType = {\r\n  totalUsersCount: number\r\n  pageSize: number\r\n  onPageChanged: (pageNumber: number) => void\r\n  currentPage: number\r\n  followingInProgressUsers: number[]\r\n  users: UserType[]\r\n  unFollow: (userId: number) => void\r\n  follow: (userId: number) => void\r\n}\r\n\r\nexport function Users(props: UsersPropsType) {\r\n  const {\r\n    totalUsersCount,\r\n    pageSize,\r\n    onPageChanged,\r\n    currentPage,\r\n    followingInProgressUsers,\r\n    users,\r\n    unFollow,\r\n    follow\r\n  } = props;\r\n  return (\r\n    <div className={styles.users}>\r\n      <Paginator\r\n        totalItemsCount={totalUsersCount}\r\n        pageSize={pageSize}\r\n        onPageChanged={onPageChanged}\r\n        currentPage={currentPage}\r\n        portionSize={20}\r\n      />\r\n      {\r\n        users.map(user => <User\r\n          key={user.id}\r\n          user={user}\r\n          followingInProgressUsers={followingInProgressUsers}\r\n          unFollow={unFollow}\r\n          follow={follow}\r\n        />)\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\n","import { StateType } from './redux-store';\r\nimport { UserType } from './users-reducer';\r\n\r\nexport const getUsers = (state: StateType): UserType[] => {\r\n  return state.usersPage.users;\r\n};\r\n\r\nexport const getPageSize = (state: StateType): number => {\r\n  return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state: StateType): number => {\r\n  return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state: StateType): number => {\r\n  return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state: StateType): boolean => {\r\n  return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgressUsers = (state: StateType): number[] => {\r\n  return state.usersPage.followingInProgressUsers;\r\n};\r\n","import { connect } from 'react-redux';\r\nimport { StateType } from '../../redux/redux-store';\r\nimport {\r\n  follow,\r\n  requestUsers,\r\n  unFollow,\r\n  UserType\r\n} from '../../redux/users-reducer';\r\nimport React, { ComponentType } from 'react';\r\nimport { Users } from './Users';\r\nimport { Preloader } from '../common/Preloader';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport {\r\n  getCurrentPage, getFollowingInProgressUsers,\r\n  getIsFetching,\r\n  getPageSize,\r\n  getTotalUsersCount,\r\n  getUsers\r\n} from '../../redux/users-selectors';\r\n\r\ntype MapStateToPropsType = {\r\n  users: UserType[]\r\n  pageSize: number\r\n  totalUsersCount: number\r\n  currentPage: number\r\n  isFetching: boolean\r\n  followingInProgressUsers: number[]\r\n}\r\n\r\ntype UsersContainerPropsType = MapStateToPropsType & {\r\n  follow: (userId: number) => void\r\n  unFollow: (userId: number) => void\r\n  requestUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\nclass UsersContainer extends React.Component<UsersContainerPropsType> {\r\n\r\n  componentDidMount(): void {\r\n    const { currentPage, pageSize } = this.props;\r\n    this.props.requestUsers(currentPage, pageSize);\r\n  }\r\n\r\n  onPageChanged = (pageNumber: number) => {\r\n    const { pageSize } = this.props;\r\n    this.props.requestUsers(pageNumber, pageSize);\r\n  };\r\n\r\n  render() {\r\n    const { followingInProgressUsers, follow, unFollow, users, currentPage, pageSize, totalUsersCount, isFetching } = this.props;\r\n    return (\r\n      <>\r\n        {isFetching ? <Preloader/> : null}\r\n        <Users totalUsersCount={totalUsersCount}\r\n               pageSize={pageSize}\r\n               onPageChanged={this.onPageChanged}\r\n               currentPage={currentPage}\r\n               users={users}\r\n               unFollow={unFollow}\r\n               follow={follow}\r\n               followingInProgressUsers={followingInProgressUsers}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgressUsers: getFollowingInProgressUsers(state)\r\n  };\r\n};\r\n\r\nexport default compose<ComponentType>(connect(mapStateToProps, { requestUsers, follow, unFollow }),\r\n  withAuthRedirect)(UsersContainer);","import React from 'react';\r\nimport style from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype HeaderPropsType = {\r\n  isAuth: boolean\r\n  login: string | null\r\n  logout: () => void\r\n}\r\n\r\nexport function Header(props: HeaderPropsType) {\r\n\r\n  return (\r\n    <header className={style.header}>\r\n      <img src='http://pngimg.com/uploads/eagle/eagle_PNG1229.png' alt=\"\"/>\r\n      <div className={style.loginBlock}>\r\n        <NavLink to={'/login'}>{props.isAuth\r\n          ? <div>{props.login} <button onClick={props.logout}>Log out</button>\r\n          </div>\r\n          : 'Login'}</NavLink>\r\n      </div>\r\n    </header>\r\n  );\r\n}","import { Dispatch } from 'react';\r\nimport { authAPI } from '../api/api';\r\nimport { FormAction, stopSubmit } from 'redux-form';\r\n\r\nexport type AuthDataType = {\r\n  id: number | null\r\n  email: string | null\r\n  login: string | null\r\n}\r\n\r\ntype AuthType = {\r\n  isAuth: boolean,\r\n  data: AuthDataType\r\n}\r\n\r\nexport type AuthActionsType = SetAuthUserDataActionType;\r\n\r\nexport type GetAuthType = ReturnType<typeof getAuth>\r\n\r\ntype SetAuthUserDataActionType = {\r\n  type: 'SET-AUTH-USER-DATA'\r\n  data: AuthDataType\r\n  isAuth: boolean\r\n}\r\n\r\nconst initialState: AuthType = {\r\n  isAuth: false,\r\n  data: {\r\n    id: null,\r\n    email: null,\r\n    login: null\r\n  }\r\n};\r\n\r\nexport const authReducer = (state: AuthType = initialState, action: AuthActionsType) => {\r\n  switch (action.type) {\r\n    case 'SET-AUTH-USER-DATA':\r\n      return { ...state, data: { ...action.data }, isAuth: action.isAuth };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setAuthUserData = (data: AuthDataType, isAuth: boolean): SetAuthUserDataActionType => {\r\n  return { type: 'SET-AUTH-USER-DATA', data, isAuth } as const;\r\n};\r\n\r\nexport const getAuth = () => async (dispatch: Dispatch<AuthActionsType>) => {\r\n  const data = await authAPI.getAuth();\r\n  if (!data.resultCode) {\r\n    dispatch(setAuthUserData(data.data, true));\r\n  }\r\n};\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean = false) => async (dispatch: Dispatch<AuthActionsType | GetAuthType | FormAction>) => {\r\n  const data = await authAPI.login({ email, password, rememberMe });\r\n  if (!data.resultCode) {\r\n    dispatch(getAuth());\r\n  } else {\r\n    const message = data.messages.length ? data.messages[0] : 'Some error';\r\n    dispatch(stopSubmit('login', { _error: message }));\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch: Dispatch<AuthActionsType>) => {\r\n  const data = await authAPI.logout();\r\n  if (!data.resultCode) {\r\n    dispatch(setAuthUserData({\r\n      id: null,\r\n      email: null,\r\n      login: null\r\n    }, false));\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Header } from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { StateType } from '../../redux/redux-store';\r\nimport { logout } from '../../redux/auth-reducer';\r\n\r\ntype MapStateToPropsType = {\r\n  isAuth: boolean\r\n  login: string | null\r\n};\r\n\r\ntype HeaderContainerPropsType = MapStateToPropsType & {\r\n  logout: () => void\r\n}\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\r\n\r\n  render() {\r\n    return (\r\n      <Header\r\n        isAuth={this.props.isAuth}\r\n        login={this.props.login}\r\n        logout={this.props.logout}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.data.login\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React from 'react';\r\nimport { InjectedFormProps, reduxForm } from 'redux-form';\r\nimport { createField, Input } from '../common/FormsControls';\r\nimport { maxLengthCreator, requiredField } from '../../helpers/validators/validators';\r\nimport styles from './../common/FormsControls.module.css';\r\n\r\nexport type FormDataType = {\r\n  email: string\r\n  password: string\r\n  rememberMe: boolean\r\n}\r\n\r\nconst maxLength = maxLengthCreator(50);\r\n\r\nexport const LoginForm: React.FC<InjectedFormProps<FormDataType>> = ({ handleSubmit, error }) => {\r\n  const summaryError = error;\r\n  const formClassName = `${styles.formSummary} ${summaryError ? styles.formSummaryError : ''}`;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={formClassName}>\r\n      {createField(Input, 'email', 'Email', [requiredField, maxLength])}\r\n      {createField(Input, 'password', 'Password', [requiredField, maxLength], { type: 'password' })}\r\n      {createField('input', 'rememberMe', undefined, undefined, { type: 'checkbox' }, 'remember me')}\r\n      {/*<div>\r\n        <Field\r\n          component={Input}\r\n          placeholder={'Email'}\r\n          name={'email'}\r\n          validate={[requiredField, maxLength]}\r\n        />\r\n      </div>*/}\r\n      {/*<div>\r\n        <Field\r\n          component={Input}\r\n          type={'password'}\r\n          placeholder={'Password'}\r\n          name={'password'}\r\n          validate={[requiredField, maxLength]}\r\n        />\r\n      </div>*/}\r\n      {/*<div>\r\n        <Field\r\n          component={'input'}\r\n          type={'checkbox'}\r\n          name={'rememberMe'}/> remember me\r\n      </div>*/}\r\n      <div style={{ height: '20px', color: 'red' }}>\r\n        {summaryError}\r\n      </div>\r\n      <div>\r\n        <button>Login</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport const LoginReduxForm = reduxForm<FormDataType>({\r\n  form: 'login'\r\n})(LoginForm);","import React from 'react';\r\nimport { FormDataType, LoginReduxForm } from './LoginForm';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { StateType } from '../../redux/redux-store';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\ntype LoginFCPropsType = {\r\n  login: (login: string, password: string, rememberMe: boolean) => void\r\n  isAuth: boolean\r\n}\r\n\r\nexport const LoginFC: React.FC<LoginFCPropsType> = ({ login, isAuth }) => {\r\n  const onSubmit = (formData: FormDataType) => {\r\n    login(formData.email, formData.password, formData.rememberMe);\r\n  };\r\n\r\n  if (isAuth) {\r\n    return <Redirect to={'/profile'}/>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>LOGIN</h1>\r\n      <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: StateType): { isAuth: boolean } => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  };\r\n};\r\n\r\nexport const Login = connect(mapStateToProps, { login })(LoginFC);\r\n","import { Dispatch } from 'react';\r\nimport { getAuth, GetAuthType } from './auth-reducer';\r\n\r\ntype AppReducerType = {\r\n  isInitialized: boolean\r\n}\r\n\r\nconst initialState: AppReducerType = {\r\n  isInitialized: false\r\n};\r\n\r\nexport type AppReducerActionsType = SetIsInitializedActionType\r\n\r\ntype SetIsInitializedActionType = {\r\n  type: 'SET-IS-INITIALIZED'\r\n}\r\n\r\nexport const appReducer = (state: AppReducerType = initialState, action: AppReducerActionsType): AppReducerType => {\r\n  switch (action.type) {\r\n    case 'SET-IS-INITIALIZED':\r\n      return { ...state, isInitialized: true };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nconst setIsInitializedAC = (): SetIsInitializedActionType => {\r\n  return { type: 'SET-IS-INITIALIZED' } as const;\r\n};\r\n\r\nexport const initializeApp = () => async (dispatch: Dispatch<AppReducerActionsType | GetAuthType>) => {\r\n  await dispatch(getAuth());\r\n  await dispatch(setIsInitializedAC());\r\n};\r\n","import { applyMiddleware, combineReducers, createStore, compose } from 'redux';\r\nimport { profileReducer } from './profile-reducer';\r\nimport { dialogsReducer } from './dialogs-reducer';\r\nimport { usersReducer } from './users-reducer';\r\nimport { authReducer } from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport { appReducer } from './app-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  app: appReducer,\r\n  form: formReducer\r\n});\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n//export const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n// @ts-ignore\r\nwindow.__store__ = store;\r\n\r\nexport type StateType = ReturnType<typeof rootReducer>;\r\n\r\n// export type AppActionsType =\r\n//   UsersActionsType\r\n//   | AuthActionsType\r\n//   | DialogsActionsType\r\n//   | ProfileActionsType\r\n//   | AppReducerActionsType\r\n//\r\n// export type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, StateType, unknown, AppActionsType>;\r\n","import React, { ComponentType, Suspense } from 'react';\r\nimport { Preloader } from '../components/common/Preloader';\r\n\r\nexport function withSuspense<T>(Component: ComponentType<T>) {\r\n  return (props: {}) => {\r\n    return <Suspense fallback={<Preloader/>}><Component {...props as T}/></Suspense>;\r\n  };\r\n}","import React, { ComponentType } from 'react';\nimport './App.css';\nimport { Navbar } from './components/Navbar/Navbar';\nimport { HashRouter, Route, RouteComponentProps, withRouter } from 'react-router-dom';\nimport { Music } from './components/Music/Music';\nimport { Settings } from './components/Settings/Settings';\nimport { News } from './components/News/News';\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport { Login } from './components/Login/Login';\nimport { connect, Provider } from 'react-redux';\nimport { compose } from 'redux';\nimport { initializeApp } from './redux/app-reducer';\nimport { StateType, store } from './redux/redux-store';\nimport { Preloader } from './components/common/Preloader';\nimport { withSuspense } from './hoc/withSuspense';\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\ntype PropsType = {\n  initializeApp: () => void\n  isInitialized: boolean\n}\ntype AppPropsType = RouteComponentProps & PropsType\n\nclass App extends React.Component<AppPropsType> {\n  componentDidMount(): void {\n    this.props.initializeApp();\n  }\n\n  render() {\n    if (!this.props.isInitialized) {\n      return <Preloader/>;\n    }\n\n    return (\n      <div className=\"App\">\n        <HeaderContainer/>\n        <Navbar/>\n        <div className=\"App-content\">\n          <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\n          <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\n          <Route path='/users' render={() => <UsersContainer/>}/>\n          <Route path='/news' render={() => <News/>}/>\n          <Route path='/music' render={() => <Music/>}/>\n          <Route path='/settings' render={() => <Settings/>}/>\n          <Route path='/login' render={() => <Login/>}/>\n        </div>\n      </div>\n    );\n  }\n}\n\ntype MapStateToPropsType = {\n  isInitialized: boolean\n}\n\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\n  return {\n    isInitialized: state.app.isInitialized\n  };\n};\n\nconst AppContainer = compose<ComponentType>(connect(mapStateToProps, { initializeApp }), withRouter)(App);\n\nexport const SocialNetworkApp = () => {\n\n  return (\n    <React.StrictMode>\n      <HashRouter>\n        <Provider store={store}>\n          <AppContainer/>\n        </Provider>\n      </HashRouter>\n    </React.StrictMode>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { SocialNetworkApp } from './App';\n\nReactDOM.render(\n  <SocialNetworkApp/>,\n    document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1XGgA\",\"error\":\"FormsControls_error__1zjO-\",\"errorText\":\"FormsControls_errorText__W7A3T\",\"formSummaryError\":\"FormsControls_formSummaryError__1W4jS\",\"formSummary\":\"FormsControls_formSummary__1lftK\"};","export default __webpack_public_path__ + \"static/media/loadingAnimation.d6fb07a0.svg\";","import loadingAnimation from \"../../assets/images/loadingAnimation.svg\";\r\nimport React from \"react\";\r\n\r\nexport function Preloader() {\r\n    return (\r\n        <div>\r\n            <img src={loadingAnimation} alt=\"\"/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Field, WrappedFieldMetaProps, WrappedFieldProps } from 'redux-form';\r\nimport styles from './FormsControls.module.css';\r\n\r\ntype FormControlPropsType = {\r\n  meta: WrappedFieldMetaProps\r\n}\r\n\r\nconst FormControl: React.FC<FormControlPropsType> = ({ meta: { touched, error }, children }) => {\r\n  const hasError = error && touched;\r\n  const textAreaClassName = `${styles.formControl} ${hasError ? styles.error : ''}`;\r\n\r\n  return (\r\n    <div className={textAreaClassName}>\r\n      {children}\r\n      <div className={styles.errorText}>{hasError && error}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n  const { input, meta, ...restProps } = props;\r\n\r\n  return (\r\n    <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n  );\r\n};\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n  const { input, meta, ...restProps } = props;\r\n\r\n  return (\r\n    <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n  );\r\n};\r\n\r\ntype ValidatorsType = Array<(value: string) => string | undefined>\r\ntype PropsType = {\r\n  type?: string\r\n  value?: string\r\n}\r\n\r\nexport const createField = (component: React.FC<WrappedFieldProps> | string, name: string, placeholder?: string, validators?: ValidatorsType, props?: PropsType, text?: string) => (\r\n  <div>\r\n    <Field\r\n      component={component}\r\n      placeholder={placeholder}\r\n      name={name}\r\n      validate={validators}\r\n      {...props}/> {text}\r\n  </div>\r\n);\r\n\r\n// export const Textarea: React.FC<WrappedFieldProps> = ({\r\n//                                                         input,\r\n//                                                         meta,\r\n//                                                         ...props\r\n//                                                       }) => {\r\n//   const hasError = meta.error && meta.touched\r\n//   const textAreaClassName = `${styles.formControl} ${hasError ? styles.error : ''}`;\r\n//\r\n//   return (\r\n//     <div className={textAreaClassName}>\r\n//       <textarea {...input} {...props}/>\r\n//       <div className={styles.errorText}>{hasError && meta.error}</div>\r\n//     </div>\r\n//   );\r\n// };\r\n//\r\n// export const Input: React.FC<WrappedFieldProps> = ({\r\n//                                                         input,\r\n//                                                         meta,\r\n//                                                         ...props\r\n//                                                       }) => {\r\n//   const hasError = meta.error && meta.touched\r\n//   const textAreaClassName = `${styles.formControl} ${hasError ? styles.error : ''}`;\r\n//\r\n//   return (\r\n//     <div className={textAreaClassName}>\r\n//       <input {...input} {...props}/>\r\n//       <div className={styles.errorText}>{hasError && meta.error}</div>\r\n//     </div>\r\n//   );\r\n// };\r\n","export const requiredField = (value: string) => {\r\n  if (value) return undefined;\r\n  return 'Field is required!';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength: number) => {\r\n  return (value: string) => {\r\n    if (value && value.trim().length <= maxLength) return undefined;\r\n    return `Max length is ${maxLength} symbols!`;\r\n  };\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Paginator_container__2wZNp\",\"page\":\"Paginator_page__Xzy2z\",\"selectedPage\":\"Paginator_selectedPage__2TTbl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1P0GL\",\"loginBlock\":\"Header_loginBlock__2TMhE\"};","import {Redirect} from \"react-router-dom\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {StateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToPropsForRedirect = (state: StateType): MapStatePropsType => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: MapStatePropsType) => {\r\n        const {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}","import { Dispatch } from 'redux';\r\nimport { profileAPI } from '../api/api';\r\n\r\nexport type PostsDataType = {\r\n  id: number\r\n  message: string\r\n  likeCount: number\r\n};\r\n\r\nexport type UserProfileType = {\r\n  userId: number\r\n  lookingForAJob: boolean\r\n  lookingForAJobDescription: string\r\n  fullName: string\r\n  contacts: {\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n  }\r\n  photos: {\r\n    small: string\r\n    large: string\r\n  }\r\n}\r\n\r\nexport type ProfileType = {\r\n  postsData: Array<PostsDataType>\r\n  status: string\r\n  profile: UserProfileType\r\n};\r\n\r\nexport type ProfileActionsType =\r\n  AddPostActionType\r\n  | SetUserProfileActionType\r\n  | SetUserStatusActionType\r\n\r\ntype AddPostActionType = {\r\n  type: 'ADD-POST'\r\n  newPostBody: string\r\n}\r\ntype SetUserProfileActionType = {\r\n  type: 'SET-USER-PROFILE'\r\n  profile: UserProfileType\r\n}\r\ntype SetUserStatusActionType = {\r\n  type: 'SET-USER-STATUS'\r\n  status: string\r\n}\r\n\r\nconst initialState: ProfileType = {\r\n  postsData: [\r\n    { id: 1, message: 'Hi, how are you', likeCount: 10 },\r\n    { id: 2, message: 'It\\'s my first post', likeCount: 15 },\r\n    { id: 3, message: 'Oops', likeCount: 30 },\r\n    { id: 4, message: 'Blablabla', likeCount: 1 }\r\n  ],\r\n  status: '',\r\n  profile: {\r\n    userId: 0,\r\n    lookingForAJob: false,\r\n    lookingForAJobDescription: '',\r\n    fullName: '',\r\n    contacts: {\r\n      github: '',\r\n      vk: '',\r\n      facebook: '',\r\n      instagram: '',\r\n      twitter: '',\r\n      website: '',\r\n      youtube: '',\r\n      mainLink: ''\r\n    },\r\n    photos: {\r\n      small: '',\r\n      large: ''\r\n    }\r\n  }\r\n};\r\n\r\nexport const profileReducer = (state: ProfileType = initialState, action: ProfileActionsType): ProfileType => {\r\n  switch (action.type) {\r\n    case 'ADD-POST':\r\n      const newPost = {\r\n        id: 5,\r\n        message: action.newPostBody,\r\n        likeCount: 0\r\n      };\r\n      return {\r\n        ...state,\r\n        postsData: [...state.postsData, newPost]\r\n      };\r\n    case 'SET-USER-PROFILE':\r\n      return {\r\n        ...state,\r\n        profile: action.profile\r\n      };\r\n    case 'SET-USER-STATUS':\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const addPost = (newPostBody: string): AddPostActionType => {\r\n  return { type: 'ADD-POST', newPostBody } as const;\r\n};\r\nexport const setUserProfile = (profile: UserProfileType): SetUserProfileActionType => {\r\n  return { type: 'SET-USER-PROFILE', profile } as const;\r\n};\r\nexport const setUserStatus = (status: string): SetUserStatusActionType => {\r\n  return { type: 'SET-USER-STATUS', status } as const;\r\n};\r\n\r\nexport const getUserProfile = (userId: string) => async (dispatch: Dispatch<ProfileActionsType>) => {\r\n  const response = await profileAPI.getProfile(userId);\r\n  dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getUserStatus = (userId: string) => async (dispatch: Dispatch<ProfileActionsType>) => {\r\n  const response = await profileAPI.getStatus(userId);\r\n  dispatch(setUserStatus(response.data));\r\n};\r\n\r\nexport const updateUserStatus = (status: string) => async (dispatch: Dispatch<ProfileActionsType>) => {\r\n  const response = await profileAPI.updateStatus(status);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setUserStatus(status));\r\n  }\r\n};"],"sourceRoot":""}