{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Post/Post.module.css","redux/state.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/News/News.tsx","App.tsx","index.tsx","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css"],"names":["module","exports","store","_state","dialogsPage","dialogsData","id","name","picture","messagesData","message","newMessageText","profilePage","postsData","likeCount","newPostText","getState","this","_onChange","subscribe","callback","_addPost","newPost","push","_updateNewMessageText","newText","_addMessage","newMessage","_updateNewPostText","dispatch","action","type","DialogItem","props","path","state","className","s","dialog","activeClassName","active","to","src","alt","Message","Dialogs","dialogs","dialogItems","map","t","onChange","e","currentTarget","value","onClick","messages","Header","header","Navbar","nav","item","console","log","Post","MyPosts","postsElements","postsBlock","posts","ProfileInfo","contentBackground","descriptionblock","Profile","Music","Settings","News","App","render","rerenderEntireTree","ReactDOM","StrictMode","bind","document","getElementById"],"mappings":"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","file":"static/js/main.7ee1b9af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__kSILv\",\"posts\":\"MyPosts_posts__1mxel\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentBackground\":\"ProfileInfo_contentBackground__3NTUq\",\"descriptionblock\":\"ProfileInfo_descriptionblock__1iDgo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1P0GL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1dLyP\"};","export type DialogsDataType = {\r\n    id: number\r\n    name: string\r\n    picture: string\r\n}\r\nexport type MessagesDataType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type PostsDataType = {\r\n    id: number\r\n    message: string\r\n    likeCount: number\r\n}\r\nexport type DialogsType = {\r\n    dialogsData: Array<DialogsDataType>\r\n    messagesData: Array<MessagesDataType>\r\n    newMessageText: string\r\n}\r\nexport type ProfileType = {\r\n    postsData: Array<PostsDataType>\r\n    newPostText: string\r\n}\r\nexport type StateType = {\r\n    dialogsPage: DialogsType\r\n    profilePage: ProfileType\r\n}\r\n\r\nexport type ActionType = ReturnType<typeof AddPostActionCreator> | ReturnType<typeof UpdateNewMessageActionCreator> | ReturnType<typeof AddMessageActionCreator> | ReturnType<typeof UpdateNewPostActionCreator>;\r\n\r\nexport type StoreType = {\r\n    _state: StateType\r\n    getState: () => StateType\r\n    _onChange: () => void\r\n    subscribe: (callback: () => void) => void\r\n    _addPost: () => void\r\n    _updateNewMessageText: (newText: string) => void\r\n    _addMessage: () => void\r\n    _updateNewPostText: (newText: string) => void\r\n    dispatch: (action: ActionType) => void\r\n}\r\n\r\nexport const store: StoreType = {\r\n    _state: {\r\n        dialogsPage: {\r\n            dialogsData: [\r\n                {\r\n                    id: 1,\r\n                    name: 'Lewis',\r\n                    picture: 'https://imgresizer.eurosport.com/unsafe/1200x0/filters:format(jpeg):focal(1390x798:1392x796)/origin-imgresizer.eurosport.com/2020/06/01/2826749-58300008-2560-1440.jpg'\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name: 'Valtteri',\r\n                    picture: 'https://sun9-21.userapi.com/Wj79trhX7JToTycCwPG_CYZSQd1JwAzrdl5G1Q/GIcWEc2zRNg.jpg'\r\n                },\r\n                {\r\n                    id: 3,\r\n                    name: 'Max',\r\n                    picture: 'https://s-cdn.sportbox.ru/images/styles/upload/fp_fotos/a3/7f/6adfbd96bf588fe6288aca94715e78f65da1d4d07ec09338177982.jpg'\r\n                },\r\n                {\r\n                    id: 4,\r\n                    name: 'Sergio',\r\n                    picture: 'https://www.mexicanist.com/_files/200005550-0f0b40f0b7/450/Sergio%20Perez.jpg'\r\n                },\r\n                {\r\n                    id: 5,\r\n                    name: 'Daniel',\r\n                    picture: 'https://media-cdn.mclaren.com/media/images/articles/hero/DR_x_3_web.jpg'\r\n                },\r\n                {\r\n                    id: 6,\r\n                    name: 'Carlos',\r\n                    picture: 'https://images2.gazzettaobjects.it/methode_image/2021/03/22/Motori/Foto_Motori_-_Trattate/e3fe2efa4317707d10bb7bfa84eb3c6d_1200x675.jpg?v=202103221647'\r\n                }\r\n            ],\r\n            messagesData: [\r\n                {id: 1, message: 'Hi losers'},\r\n                {id: 2, message: 'Your majesty'},\r\n                {id: 3, message: 'Track limits?'},\r\n                {id: 4, message: 'Stop!'},\r\n                {id: 5, message: 'Hahahaha'},\r\n                {id: 6, message: 'Ferrari'}\r\n            ],\r\n            newMessageText: ''\r\n        },\r\n        profilePage: {\r\n            postsData: [\r\n                {id: 1, message: 'Hi, how are you', likeCount: 10},\r\n                {id: 2, message: 'It\\'s my first post', likeCount: 15},\r\n                {id: 3, message: 'Oops', likeCount: 30},\r\n                {id: 4, message: 'Blablabla', likeCount: 1}\r\n            ],\r\n            newPostText: ''\r\n        }\r\n    },\r\n    getState() {\r\n        return this._state\r\n    },\r\n    _onChange() {\r\n\r\n    },\r\n    subscribe(callback) {\r\n        this._onChange = callback;\r\n    },\r\n    _addPost() {\r\n        let newPost = {\r\n            id: 5,\r\n            message: this._state.profilePage.newPostText,\r\n            likeCount: 0\r\n        };\r\n        this._state.profilePage.postsData.push(newPost);\r\n        this._state.profilePage.newPostText = '';\r\n        this._onChange();\r\n    },\r\n    _updateNewMessageText(newText) {\r\n        this._state.dialogsPage.newMessageText = newText;\r\n        this._onChange();\r\n    },\r\n    _addMessage() {\r\n        let newMessage = {\r\n            id: 7,\r\n            message: this._state.dialogsPage.newMessageText\r\n        };\r\n        this._state.dialogsPage.messagesData.push(newMessage);\r\n        this._state.dialogsPage.newMessageText = '';\r\n        this._onChange();\r\n    },\r\n    _updateNewPostText(newText) {\r\n        this._state.profilePage.newPostText = newText;\r\n        this._onChange();\r\n    },\r\n    dispatch(action) {\r\n        switch (action.type) {\r\n            case 'ADD-POST':\r\n                this._addPost();\r\n                break;\r\n            case 'UPDATE-NEW-MESSAGE-TEXT':\r\n                this._updateNewMessageText(action.newText);\r\n                break;\r\n            case 'ADD-MESSAGE':\r\n                this._addMessage();\r\n                break;\r\n            case 'UPDATE-NEW-POST-TEXT':\r\n                this._updateNewPostText(action.newText);\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\nexport const AddPostActionCreator = () => {\r\n    return {type: 'ADD-POST'} as const\r\n}\r\nexport const UpdateNewMessageActionCreator = (text: string) => {\r\n    return {type: 'UPDATE-NEW-MESSAGE-TEXT', newText: text} as const\r\n}\r\nexport const AddMessageActionCreator = () => {\r\n    return {type: 'ADD-MESSAGE'} as const\r\n}\r\nexport const UpdateNewPostActionCreator = (text: string) => {\r\n    return {type: 'UPDATE-NEW-POST-TEXT', newText: text} as const\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DialogsDataType} from \"../../../redux/state\";\r\nimport s from \"./../Dialogs.module.css\"\r\n\r\ntype DialoggItemPropsType = {\r\n    state: DialogsDataType\r\n}\r\n\r\nexport function DialogItem(props: DialoggItemPropsType) {\r\n    let path: string = \"/dialogs/\" + props.state.id\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink activeClassName={s.active} to={path}><img src={props.state.picture} alt=\"\"/>{props.state.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\"\r\n\r\n\r\ntype MessageType = {\r\n    message: string\r\n}\r\n\r\nexport function Message(props: MessageType) {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport {ActionType, AddMessageActionCreator, DialogsType, UpdateNewMessageActionCreator} from \"../../redux/state\";\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport {Message} from \"./Message/Message\";\r\n\r\ntype DialogsPropsType = {\r\n    state: DialogsType\r\n    dispatch: (action: ActionType) => void\r\n}\r\n\r\nexport function Dialogs(props: DialogsPropsType) {\r\n\r\n    let addMessage = () => {\r\n        props.dispatch(AddMessageActionCreator())\r\n    }\r\n\r\n    let onMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {props.dispatch(UpdateNewMessageActionCreator(e.currentTarget.value))}\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                {props.state.dialogsData.map(t => <DialogItem state={t}/>)}\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    <textarea onChange={onMessageChange}\r\n                              value={props.state.newMessageText}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={addMessage}>Add message</button>\r\n                </div>\r\n                <div className={s.messages}>\r\n                    {props.state.messagesData.map(t => <Message message={t.message}/>)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './Header.module.css';\r\n\r\nexport function Header() {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='http://pngimg.com/uploads/eagle/eagle_PNG1229.png' alt=\"\"/>\r\n        </header>\r\n    )\r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from './Navbar.module.css'\r\nconsole.log(s);\r\nexport function Navbar() {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import s from \"./Post.module.css\";\r\nimport React from \"react\";\r\n\r\ntype PostType = {\r\n    message: string,\r\n    likeCount: number\r\n}\r\n\r\nexport function Post(props: PostType) {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src='https://twt-thumbs.washtimes.com/media/image/2015/10/20/Rowan_Atkinson_c0-269-1200-968_s885x516.jpg?73654bfb353205d8a409d0b97a2183fbcb215332'/>\r\n            <span>{props.message}</span>\r\n            <div>\r\n                <span>like </span>{props.likeCount}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","import s from \"./MyPosts.module.css\";\r\nimport React, {ChangeEvent} from \"react\";\r\nimport {Post} from \"./Post/Post\";\r\nimport {ActionType, AddPostActionCreator, PostsDataType, UpdateNewPostActionCreator} from \"../../../redux/state\";\r\n\r\ntype MyPostsPropsType = {\r\n    postsData: Array<PostsDataType>\r\n    newPostText: string\r\n    dispatch: (action: ActionType) => void\r\n}\r\n\r\nexport function MyPosts(props: MyPostsPropsType) {\r\n\r\n    let postsElements = props.postsData.map(t => <Post key={t.id} message={t.message} likeCount={t.likeCount}/>);\r\n\r\n    let addPost = () => {\r\n        debugger\r\n        props.dispatch(AddPostActionCreator());\r\n    }\r\n\r\n    let onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.dispatch(UpdateNewPostActionCreator(e.currentTarget.value))\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea onChange={onPostChange}\r\n                              value={props.newPostText}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={addPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\n\r\nexport function ProfileInfo() {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className={s.contentBackground}\r\n                     src='https://img.wallpapersafari.com/desktop/1920/1080/28/6/MxqLb9.jpg'/>\r\n            </div>\r\n            <div className={s.descriptionblock}>\r\n                ava + description\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","import React from \"react\";\r\nimport {MyPosts} from \"./MyPosts/MyPosts\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {ActionType, ProfileType} from \"../../redux/state\";\r\n\r\ntype ProfilePropsType = {\r\n    profilePage: ProfileType\r\n    dispatch: (action: ActionType) => void\r\n}\r\n\r\nexport function Profile(props: ProfilePropsType) {\r\n    return (\r\n        <div>\r\n            <ProfileInfo/>\r\n            <MyPosts postsData={props.profilePage.postsData}\r\n                     newPostText={props.profilePage.newPostText}\r\n                     dispatch={props.dispatch}/>\r\n        </div>\r\n    )\r\n\r\n}","import React from \"react\";\r\nimport s from \"./Music.module.css\"\r\n\r\nexport function Music() {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./Settings.module.css\"\r\n\r\nexport function Settings() {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./News.module.css\"\r\n\r\nexport function News() {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {Dialogs} from './components/Dialogs/Dialogs';\nimport {Header} from \"./components/Header/Header\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {Profile} from \"./components/Profile/Profile\";\nimport {BrowserRouter, Route} from \"react-router-dom\"\nimport {Music} from \"./components/Music/Music\";\nimport {Settings} from \"./components/Settings/Settings\";\nimport {News} from './components/News/News';\nimport {ActionType, StateType} from './redux/state';\n\ntype AppPropsType = {\n    state: StateType\n    dispatch: (action: ActionType) => void\n}\n\nfunction App(props: AppPropsType) {\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <Header/>\n                <Navbar/>\n                <div className=\"App-content\">\n                    <Route path='/dialogs' render={() => <Dialogs state={props.state.dialogsPage}\n                                                                  dispatch={props.dispatch}/>}/>\n                    <Route path='/profile' render={() => <Profile profilePage={props.state.profilePage}\n                                                                  dispatch={props.dispatch}/>}/>\n                    <Route path='/news' render={() => <News/>}/>\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {store} from \"./redux/state\";\n\nexport let rerenderEntireTree = () => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App state={store.getState()}\n                 dispatch={store.dispatch.bind(store)}/>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\nrerenderEntireTree()\nstore.subscribe(rerenderEntireTree);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__n2StH\",\"item\":\"Navbar_item__1ZDjl\",\"active\":\"Navbar_active__oF4pq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2HlaX\",\"dialogItems\":\"Dialogs_dialogItems__2Nm5L\",\"dialog\":\"Dialogs_dialog__SfNFC\",\"active\":\"Dialogs_active__3zl5o\",\"messages\":\"Dialogs_messages__3utum\",\"message\":\"Dialogs_message__2BubX\"};"],"sourceRoot":""}