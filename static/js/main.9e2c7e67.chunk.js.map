{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Users/Users.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","components/Navbar/Navbar.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/News/News.tsx","redux/dialogs-reducer.ts","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogsContainer.ts","components/Dialogs/Dialogs.tsx","api/api.ts","redux/users-reducer.ts","assets/images/userPhoto.png","components/Users/Users.tsx","assets/images/loadingAnimation.svg","components/common/Preloader.tsx","components/Users/UsersContainer.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","redux/profile-reducer.ts","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPostsContainer.ts","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","App.tsx","redux/redux-store.ts","index.tsx"],"names":["module","exports","Navbar","className","s","nav","item","to","activeClassName","active","console","log","Music","Settings","News","initialState","dialogsData","id","name","picture","messagesData","message","newMessageText","DialogItem","props","path","state","dialog","src","alt","Message","DialogsContainer","connect","dialogsPage","isAuth","auth","dispatch","sendMessage","type","onNewMessageChange","text","UpdateNewMessage","dialogs","dialogItems","map","t","onChange","e","currentTarget","value","onClick","messages","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","post","delete","authAPI","profileAPI","users","totalUsersCount","isFetching","followingInProgressUsers","toggleIsFetching","toggleIsFollowingInProgress","isFollowingInProgress","Users","pagesCount","Math","ceil","pages","i","push","styles","page","index","onPageChanged","selectedPage","user","photos","small","userPhoto","disabled","some","u","followed","unFollow","follow","status","Preloader","loadingAnimation","UsersContainer","pageNumber","getUsers","this","React","Component","usersPage","items","totalCount","resultCode","followSuccess","unFollowSuccess","ProfileInfo","profile","contentBackground","descriptionblock","large","postsData","likeCount","newPostText","lookingForAJob","lookingForAJobDescription","fullName","contacts","github","vk","facebook","instagram","twitter","website","youtube","mainLink","Post","MyPostsContainer","profilePage","addPost","onNewPostChange","newText","postsElements","postsBlock","posts","Profile","ProfileContainer","match","params","getUserProfile","withUrlDataContainerComponent","withRouter","Header","style","header","loginBlock","login","email","HeaderContainer","getAuth","setAuthUserData","Login","App","render","rootReducer","combineReducers","action","newPost","newMessage","filter","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e2c7e67.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2HlaX\",\"dialogItems\":\"Dialogs_dialogItems__2Nm5L\",\"dialog\":\"Dialogs_dialog__SfNFC\",\"active\":\"Dialogs_active__3zl5o\",\"messages\":\"Dialogs_messages__3utum\",\"message\":\"Dialogs_message__2BubX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__1bnnk\",\"selectedPage\":\"Users_selectedPage__3U3lB\",\"page\":\"Users_page__36ejG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentBackground\":\"ProfileInfo_contentBackground__3NTUq\",\"descriptionblock\":\"ProfileInfo_descriptionblock__1iDgo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__kSILv\",\"posts\":\"MyPosts_posts__1mxel\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1P0GL\",\"loginBlock\":\"Header_loginBlock__2TMhE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1dLyP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__n2StH\",\"item\":\"Navbar_item__1ZDjl\",\"active\":\"Navbar_active__oF4pq\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from './Navbar.module.css'\r\nconsole.log(s);\r\nexport function Navbar() {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport function Music() {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport function Settings() {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport function News() {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}","import {ActionType} from \"./redux-store\";\r\n\r\nexport type DialogsDataType = {\r\n    id: number\r\n    name: string\r\n    picture: string\r\n};\r\ntype MessagesDataType = {\r\n    id: number\r\n    message: string\r\n};\r\nexport type DialogsType = {\r\n    dialogsData: Array<DialogsDataType>\r\n    messagesData: Array<MessagesDataType>\r\n    newMessageText: string\r\n};\r\n\r\nconst initialState: DialogsType = {\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: 'Lewis',\r\n            picture: 'https://imgresizer.eurosport.com/unsafe/1200x0/filters:format(jpeg):focal(1390x798:1392x796)/origin-imgresizer.eurosport.com/2020/06/01/2826749-58300008-2560-1440.jpg'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Valtteri',\r\n            picture: 'https://sun9-21.userapi.com/Wj79trhX7JToTycCwPG_CYZSQd1JwAzrdl5G1Q/GIcWEc2zRNg.jpg'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Max',\r\n            picture: 'https://s-cdn.sportbox.ru/images/styles/upload/fp_fotos/a3/7f/6adfbd96bf588fe6288aca94715e78f65da1d4d07ec09338177982.jpg'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Sergio',\r\n            picture: 'https://www.mexicanist.com/_files/200005550-0f0b40f0b7/450/Sergio%20Perez.jpg'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Daniel',\r\n            picture: 'https://media-cdn.mclaren.com/media/images/articles/hero/DR_x_3_web.jpg'\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'Carlos',\r\n            picture: 'https://images2.gazzettaobjects.it/methode_image/2021/03/22/Motori/Foto_Motori_-_Trattate/e3fe2efa4317707d10bb7bfa84eb3c6d_1200x675.jpg?v=202103221647'\r\n        }\r\n    ],\r\n    messagesData: [\r\n        {id: 1, message: 'Hi losers'},\r\n        {id: 2, message: 'Your majesty'},\r\n        {id: 3, message: 'Track limits?'},\r\n        {id: 4, message: 'Stop!'},\r\n        {id: 5, message: 'Hahahaha'},\r\n        {id: 6, message: 'Ferrari'}\r\n    ],\r\n    newMessageText: ''\r\n};\r\n\r\nexport const dialogsReducer = (state: DialogsType = initialState, action: ActionType): DialogsType => {\r\n    switch (action.type) {\r\n        case 'ADD-MESSAGE':\r\n            const newMessage = {\r\n                id: 7,\r\n                message: state.newMessageText\r\n            };\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, newMessage],\r\n                newMessageText: ''\r\n            };\r\n        case 'UPDATE-NEW-MESSAGE-TEXT':\r\n            return {\r\n                ...state,\r\n                newMessageText: action.text\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const AddMessage = () => {\r\n    return {type: 'ADD-MESSAGE'} as const\r\n}\r\nexport const UpdateNewMessage = (text: string) => {\r\n    return {type: 'UPDATE-NEW-MESSAGE-TEXT', text} as const\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./../Dialogs.module.css\"\r\nimport {DialogsDataType} from \"../../../redux/dialogs-reducer\";\r\n\r\ntype DialoggItemPropsType = {\r\n    state: DialogsDataType\r\n}\r\n\r\nexport function DialogItem(props: DialoggItemPropsType) {\r\n    let path: string = \"/dialogs/\" + props.state.id\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink activeClassName={s.active} to={path}><img src={props.state.picture} alt=\"\"/>{props.state.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\"\r\n\r\n\r\ntype MessageType = {\r\n    message: string\r\n}\r\n\r\nexport function Message(props: MessageType) {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n\r\n}","import {AddMessage, DialogsType, UpdateNewMessage} from \"../../redux/dialogs-reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\n\r\ntype MapStateToPropsType = {\r\n    dialogsPage: DialogsType\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n    sendMessage: () => void\r\n    onNewMessageChange: (value: string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        sendMessage: () => {\r\n            dispatch(AddMessage());\r\n        },\r\n        onNewMessageChange: (text: string) => {\r\n            dispatch(UpdateNewMessage(text));\r\n        }\r\n    }\r\n};\r\n\r\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\r\n\r\n","import React, {ChangeEvent} from \"react\";\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogsType} from \"../../redux/dialogs-reducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\ntype DialogsPropsType = {\r\n    sendMessage: () => void\r\n    onNewMessageChange: (value: string) => void\r\n    dialogsPage: DialogsType\r\n    isAuth: boolean\r\n}\r\n\r\nexport function Dialogs(props: DialogsPropsType) {\r\n\r\n    let sendMessage = () => {\r\n        props.sendMessage()\r\n    };\r\n\r\n    let onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {props.onNewMessageChange(e.currentTarget.value)};\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                {props.dialogsPage.dialogsData.map(t => <DialogItem key={t.id} state={t}/>)}\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    <textarea onChange={onNewMessageChange}\r\n                              value={props.dialogsPage.newMessageText}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={sendMessage}>Add message</button>\r\n                </div>\r\n                <div className={s.messages}>\r\n                    {props.dialogsPage.messagesData.map(t => <Message key={t.id} message={t.message}/>)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"b38f8e9d-743e-47d0-a483-a9b36f192933\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    followUser(userId: number) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => response.data);\r\n    },\r\n    unFollowUser(userId: number) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => response.data);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: string) {\r\n        return instance.get(`profile/${userId}`);\r\n    }\r\n}","import {ActionType} from \"./redux-store\";\r\nimport {usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"react\";\r\n\r\ntype PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: string\r\n    photos: PhotosType\r\n    status: string\r\n    followed: boolean\r\n}\r\n\r\ntype UsersType = {\r\n    users: UserType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgressUsers: number[]\r\n}\r\n\r\nconst initialState: UsersType = {\r\n    users: [],\r\n    pageSize: 20,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgressUsers: []\r\n}\r\n\r\nexport const usersReducer = (state: UsersType = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case 'FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: true};\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n        case 'UN-FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: false};\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n        case 'SET-USERS':\r\n            return {...state, users: [...action.users]};\r\n        case 'SET-CURRENT-PAGE':\r\n            return {...state, currentPage: action.pageNumber};\r\n        case 'SET-TOTAL-USERS-COUNT':\r\n            return {...state, totalUsersCount: action.totalUsersCount};\r\n        case 'TOGGLE-IS-FETCHING':\r\n            return {...state, isFetching: action.isFetching};\r\n        case 'TOGGLE-IS-FOLLOWING-IN-PROGRESS':\r\n            return {\r\n                ...state, followingInProgressUsers: action.isFollowingInProgress\r\n                    ? [...state.followingInProgressUsers, action.userId]\r\n                    : state.followingInProgressUsers.filter(user => user !== action.userId)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId: number) => {\r\n    return {type: 'FOLLOW', userId} as const\r\n};\r\nexport const unFollowSuccess = (userId: number) => {\r\n    return {type: 'UN-FOLLOW', userId} as const\r\n};\r\nexport const setUsers = (users: UserType[]) => {\r\n    return {type: 'SET-USERS', users} as const\r\n};\r\nexport const setCurrentPage = (pageNumber: number) => {\r\n    return {type: 'SET-CURRENT-PAGE', pageNumber} as const\r\n};\r\nexport const setTotalUsersCount = (totalUsersCount: number) => {\r\n    return {type: 'SET-TOTAL-USERS-COUNT', totalUsersCount} as const\r\n};\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n    return {type: 'TOGGLE-IS-FETCHING', isFetching} as const\r\n};\r\nexport const toggleIsFollowingInProgress = (isFollowingInProgress: boolean, userId: number) => {\r\n    return {type: 'TOGGLE-IS-FOLLOWING-IN-PROGRESS', isFollowingInProgress, userId} as const\r\n}\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => {\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        dispatch(setCurrentPage(currentPage));\r\n        dispatch(toggleIsFetching(true));\r\n        usersAPI.getUsers(currentPage, pageSize)\r\n            .then(data => {\r\n                dispatch(toggleIsFetching(false));\r\n                dispatch(setUsers(data.items));\r\n                dispatch(setTotalUsersCount(data.totalCount));\r\n            });\r\n    }\r\n}\r\n\r\nexport const follow = (userId: number) => {\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        dispatch(toggleIsFollowingInProgress(true, userId));\r\n        usersAPI.followUser(userId)\r\n            .then(data => {\r\n                if (!data.resultCode) {\r\n                    dispatch(followSuccess(userId))\r\n                }\r\n                dispatch(toggleIsFollowingInProgress(false, userId));\r\n            })\r\n    }\r\n}\r\n\r\nexport const unFollow = (userId: number) => {\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        dispatch(toggleIsFollowingInProgress(true, userId));\r\n        usersAPI.unFollowUser(userId)\r\n            .then(data => {\r\n                if (!data.resultCode) {\r\n                    dispatch(unFollowSuccess(userId))\r\n                }\r\n                dispatch(toggleIsFollowingInProgress(false, userId));\r\n            })\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/userPhoto.a6143582.png\";","import {UserType} from \"../../redux/users-reducer\";\r\nimport styles from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/userPhoto.png\";\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype UsersPropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    currentPage: number\r\n    followingInProgressUsers: number[]\r\n    users: UserType[]\r\n    unFollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n}\r\n\r\nexport function Users(props: UsersPropsType) {\r\n\r\n    const pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    const pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    return (\r\n        <div className={styles.users}>\r\n            <div>\r\n                {pages.map((page, index) => <span key={index}\r\n                                                  onClick={() => props.onPageChanged(page)}\r\n                                                  className={props.currentPage === page ? styles.selectedPage : styles.page}>\r\n                        {`${page} `}\r\n                    </span>)}\r\n            </div>\r\n            {\r\n                props.users.map(user => <div key={user.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={`/profile/${user.id}`}>\r\n                                <img src={user.photos.small ? user.photos.small : userPhoto} alt=\"\"/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            <button disabled={props.followingInProgressUsers.some(u => u === user.id)}\r\n                                    onClick={() => {\r\n                                if (user.followed) {\r\n                                    props.unFollow(user.id);\r\n                                } else {\r\n                                    props.follow(user.id);\r\n                                }\r\n                            }}>\r\n                                {user.followed ? 'UnFollow' : 'Follow'}\r\n                            </button>\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <span>\r\n                            <div>{user.name}</div>\r\n                            <div>{user.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{\"user.location.country\"}</div>\r\n                            <div>{\"user.location.city\"}</div>\r\n                        </span>\r\n                    </span>\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/loadingAnimation.d6fb07a0.svg\";","import loadingAnimation from \"../../assets/images/loadingAnimation.svg\";\r\nimport React from \"react\";\r\n\r\nexport function Preloader() {\r\n    return (\r\n        <div>\r\n            <img src={loadingAnimation} alt=\"\"/>\r\n        </div>\r\n    )\r\n}","import {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {\r\n    follow,\r\n    getUsers,\r\n    unFollow,\r\n    UserType\r\n} from \"../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../common/Preloader\";\r\n\r\ntype MapStateToPropsType = {\r\n    users: UserType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgressUsers: number[]\r\n}\r\n\r\ntype UsersContainerPropsType = MapStateToPropsType & {\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\nclass UsersContainer extends React.Component<UsersContainerPropsType> {\r\n\r\n    componentDidMount(): void {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users totalUsersCount={this.props.totalUsersCount}\r\n                       pageSize={this.props.pageSize}\r\n                       onPageChanged={this.onPageChanged}\r\n                       currentPage={this.props.currentPage}\r\n                       users={this.props.users}\r\n                       unFollow={this.props.unFollow}\r\n                       follow={this.props.follow}\r\n                       followingInProgressUsers={this.props.followingInProgressUsers}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgressUsers: state.usersPage.followingInProgressUsers\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps,\r\n    {\r\n        getUsers,\r\n        follow,\r\n        unFollow\r\n    })(UsersContainer);","import React from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\nimport {Preloader} from \"../../common/Preloader\";\r\nimport {UserProfileType} from \"../../../redux/profile-reducer\";\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: UserProfileType\r\n}\r\n\r\nexport function ProfileInfo(props: ProfileInfoPropsType) {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className={s.contentBackground}\r\n                     src='https://img.wallpapersafari.com/desktop/1920/1080/28/6/MxqLb9.jpg' alt=\"\"/>\r\n            </div>\r\n            <div className={s.descriptionblock}>\r\n                <img src={props.profile.photos.large} alt=\"\"/>\r\n                ava + {props.profile.userId}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","import {ActionType} from \"./redux-store\";\r\nimport {Dispatch} from \"react\";\r\nimport {profileAPI} from \"../api/api\";\r\n\r\ntype PostsDataType = {\r\n    id: number\r\n    message: string\r\n    likeCount: number\r\n};\r\n\r\nexport type UserProfileType = {\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: {\r\n        github: string\r\n        vk: string\r\n        facebook: string\r\n        instagram: string\r\n        twitter: string\r\n        website: string\r\n        youtube: string\r\n        mainLink: string\r\n    }\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\n\r\nexport type ProfileType = {\r\n    postsData: Array<PostsDataType>\r\n    newPostText: string\r\n    profile: UserProfileType\r\n};\r\n\r\nconst initialState: ProfileType = {\r\n    postsData: [\r\n        {id: 1, message: 'Hi, how are you', likeCount: 10},\r\n        {id: 2, message: 'It\\'s my first post', likeCount: 15},\r\n        {id: 3, message: 'Oops', likeCount: 30},\r\n        {id: 4, message: 'Blablabla', likeCount: 1}\r\n    ],\r\n    newPostText: '',\r\n    profile: {\r\n        userId: 0,\r\n        lookingForAJob: false,\r\n        lookingForAJobDescription: '',\r\n        fullName: '',\r\n        contacts: {\r\n            github: '',\r\n            vk: '',\r\n            facebook: '',\r\n            instagram: '',\r\n            twitter: '',\r\n            website: '',\r\n            youtube: '',\r\n            mainLink: ''\r\n        },\r\n        photos: {\r\n            small: '',\r\n            large: ''\r\n        }\r\n    }\r\n};\r\n\r\nexport const profileReducer = (state: ProfileType = initialState, action: ActionType): ProfileType => {\r\n    switch (action.type) {\r\n        case 'ADD-POST':\r\n            const newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likeCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n                newPostText: ''\r\n            };\r\n        case 'UPDATE-NEW-POST-TEXT':\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            };\r\n        case 'SET-USER-PROFILE':\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const addPost = () => {\r\n    return {type: 'ADD-POST'} as const\r\n}\r\nexport const updateNewPost = (newText: string) => {\r\n    return {type: 'UPDATE-NEW-POST-TEXT', newText} as const\r\n}\r\nexport const setUserProfile = (profile: UserProfileType) => {\r\n    return {type: 'SET-USER-PROFILE', profile} as const\r\n}\r\n\r\nexport const getUserProfile = (userId: string) => {\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        profileAPI.getProfile(userId)\r\n            .then(response => {\r\n                dispatch(setUserProfile(response.data));\r\n            });\r\n    }\r\n}","import s from \"./Post.module.css\";\r\nimport React from \"react\";\r\n\r\ntype PostType = {\r\n    message: string,\r\n    likeCount: number\r\n}\r\n\r\nexport function Post(props: PostType) {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src='https://twt-thumbs.washtimes.com/media/image/2015/10/20/Rowan_Atkinson_c0-269-1200-968_s885x516.jpg?73654bfb353205d8a409d0b97a2183fbcb215332' alt=\"\"/>\r\n            <span>{props.message}</span>\r\n            <div>\r\n                <span>like </span>{props.likeCount}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","import {addPost, ProfileType, updateNewPost} from \"../../../redux/profile-reducer\";\r\nimport {Dispatch} from \"redux\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../../redux/redux-store\";\r\n\r\ntype MapStateToPropsType = {\r\n    profilePage: ProfileType\r\n}\r\ntype MapDispatchToPropsType = {\r\n    addPost: () => void\r\n    onNewPostChange: (value: string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPost());\r\n        },\r\n        onNewPostChange: (text: string) => {\r\n            dispatch(updateNewPost(text));\r\n        }\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);","import s from \"./MyPosts.module.css\";\r\nimport React, {ChangeEvent} from \"react\";\r\nimport {Post} from \"./Post/Post\";\r\nimport {ProfileType} from \"../../../redux/profile-reducer\";\r\n\r\ntype MyPostsPropsType = {\r\n    onNewPostChange: (value: string) => void\r\n    addPost: () => void\r\n    profilePage: ProfileType\r\n}\r\n\r\nexport function MyPosts(props: MyPostsPropsType) {\r\n\r\n    const postsElements = props.profilePage.postsData.map(t => <Post key={t.id} message={t.message} likeCount={t.likeCount}/>);\r\n\r\n    const addPost = () => {\r\n        props.addPost();\r\n    }\r\n\r\n    const onNewPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.onNewPostChange(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea onChange={onNewPostChange}\r\n                              value={props.profilePage.newPostText}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={addPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport {UserProfileType} from \"../../redux/profile-reducer\";\r\n\r\ntype ProfilePropsType = {\r\n    profile: UserProfileType\r\n}\r\n\r\nexport function Profile(props: ProfilePropsType) {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n\r\n}","import React from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, UserProfileType} from \"../../redux/profile-reducer\";\r\nimport {Redirect, RouteComponentProps, withRouter} from \"react-router-dom\";\r\n\r\ntype PathParamsPath = {\r\n    userId: string\r\n}\r\n\r\ntype ProfileContainerPropsType = RouteComponentProps<PathParamsPath> & PropsType\r\n\r\ntype MapStateToPropsType = {\r\n    profile: UserProfileType\r\n    isAuth: boolean\r\n}\r\n\r\ntype PropsType = MapStateToPropsType & {\r\n    getUserProfile: (userId: string) => void\r\n}\r\n\r\nclass ProfileContainer extends React.Component<ProfileContainerPropsType> {\r\n\r\n    componentDidMount(): void {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = '17254'\r\n        }\r\n        this.props.getUserProfile(userId);\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n        return (\r\n            <div>\r\n                <Profile profile={this.props.profile}/>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nconst withUrlDataContainerComponent = withRouter(ProfileContainer)\r\n\r\nexport default connect(mapStateToProps, {getUserProfile})(withUrlDataContainerComponent);","import React from \"react\";\r\nimport style from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype HeaderPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\nexport function Header(props: HeaderPropsType) {\r\n    return (\r\n        <header className={style.header}>\r\n            <img src='http://pngimg.com/uploads/eagle/eagle_PNG1229.png' alt=\"\"/>\r\n            <div className={style.loginBlock}>\r\n                <NavLink to={'/login'}>{props.isAuth ? props.login : 'Login'}</NavLink>\r\n            </div>\r\n        </header>\r\n    )\r\n}","import {ActionType} from \"./redux-store\";\r\nimport {Dispatch} from \"react\";\r\nimport {authAPI} from \"../api/api\";\r\n\r\nexport type AuthDataType = {\r\n    id: number | null\r\n    email: string | null\r\n    login: string | null\r\n}\r\n\r\ntype AuthType = {\r\n    isAuth: boolean,\r\n    data: AuthDataType\r\n}\r\n\r\nconst initialState: AuthType = {\r\n    isAuth: false,\r\n    data: {\r\n        id: null,\r\n        email: null,\r\n        login: null\r\n    }\r\n}\r\n\r\nexport const authReducer = (state: AuthType = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case 'SET-AUTH-USER-DATA':\r\n            return {...state, data: {...action.data}, isAuth: true};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (data: AuthDataType) => {\r\n    return {type: 'SET-AUTH-USER-DATA', data} as const\r\n};\r\n\r\nexport const getAuth = () => {\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        authAPI.getAuth()\r\n            .then(data => {\r\n                if (!data.resultCode) {\r\n                    dispatch(setAuthUserData(data.data))\r\n                }\r\n            });\r\n    }\r\n}","import React from \"react\";\r\nimport {Header} from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {getAuth} from \"../../redux/auth-reducer\";\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n};\r\n\r\ntype HeaderContainerPropsType = MapStateToPropsType & {\r\n    getAuth: () => void\r\n}\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\r\n\r\n    componentDidMount(): void {\r\n        this.props.getAuth();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header isAuth={this.props.isAuth}\r\n                    login={this.props.login}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.data.login\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {getAuth})(HeaderContainer);","import React from \"react\";\r\n\r\nexport const Login = () => {\r\n    return (\r\n        <div>\r\n            LOGIN\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {Route} from \"react-router-dom\"\nimport {Music} from \"./components/Music/Music\";\nimport {Settings} from \"./components/Settings/Settings\";\nimport {News} from './components/News/News';\nimport {DialogsContainer} from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {Login} from \"./components/Login/Login\";\n\nfunction App() {\n    return (\n            <div className=\"App\">\n                <HeaderContainer/>\n                <Navbar/>\n                <div    className=\"App-content\">\n                    <Route path='/dialogs' render={() => <DialogsContainer />}/>\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer />}/>\n                    <Route path='/users' render={() => <UsersContainer />}/>\n                    <Route path='/news' render={() => <News/>}/>\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n                    <Route path='/login' render={() => <Login/>}/>\n                </div>\n            </div>\n    );\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware} from \"redux\"\r\nimport {addPost, profileReducer, setUserProfile, updateNewPost} from \"./profile-reducer\";\r\nimport {AddMessage, dialogsReducer, UpdateNewMessage} from \"./dialogs-reducer\";\r\nimport {\r\n    followSuccess,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    toggleIsFetching, toggleIsFollowingInProgress,\r\n    unFollowSuccess,\r\n    usersReducer\r\n} from \"./users-reducer\";\r\nimport {authReducer, setAuthUserData} from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nexport type ActionType =\r\n    ReturnType<typeof addPost>\r\n    | ReturnType<typeof updateNewPost>\r\n    | ReturnType<typeof AddMessage>\r\n    | ReturnType<typeof UpdateNewMessage>\r\n    | ReturnType<typeof followSuccess>\r\n    | ReturnType<typeof unFollowSuccess>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalUsersCount>\r\n    | ReturnType<typeof toggleIsFetching>\r\n    | ReturnType<typeof setUserProfile>\r\n    | ReturnType<typeof setAuthUserData>\r\n    | ReturnType<typeof toggleIsFollowingInProgress>\r\n\r\nconst rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\nexport type StateType = ReturnType<typeof rootReducer>;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {store} from \"./redux/redux-store\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}